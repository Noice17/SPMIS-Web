<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"] - SPMIS_Web</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined" />
</head>
<body class="bg-gray-100">
    <div class="flex h-screen">
        <!-- Sidebar -->
        <div id="sidebar" class="bg-white shadow-lg w-64 h-full border-r border-gray-300 flex flex-col justify-between transition-all duration-300">
            <div>
                <!-- Logo & Toggle -->
                <div class="p-4 flex items-center justify-between border-b border-gray-200">
                    <img src="~/DICT.png" alt="Logo" class="h-10" id="sidebarLogo">
                    <button id="toggleSidebar" class="text-gray-600 text-2xl focus:outline-none">☰</button>
                </div>

                <!-- Sidebar Menu Items -->
                <ul class="mt-4 space-y-1">
                    <li class="group">
                        <a href="@Url.Action("Index", "Home")"
                           class="flex items-center px-6 py-3 rounded-md transition-all duration-300
                            @(ViewData["ActivePage"] == "Dashboard" ? "bg-blue-100 text-blue-700" : "text-gray-700 hover:bg-gray-200")">
                            <span class="material-symbols-outlined @(ViewData["ActivePage"] == "Dashboard" ? "text-blue-700" : "text-gray-600 group-hover:text-gray-800")">
                                dashboard
                            </span>
                            <span class="sidebar-label ml-3">Dashboard</span>
                        </a>
                    </li>
                    <li class="group">
                        <a href="@Url.Action("StrategicMap", "Map")"
                           class="flex items-center px-6 py-3 rounded-md transition-all duration-300
                            @(ViewData["ActivePage"] == "StrategyMap" ? "bg-blue-100 text-blue-700" : "text-gray-700 hover:bg-gray-200")">
                            <span class="material-symbols-outlined @(ViewData["ActivePage"] == "StrategyMap" ? "text-blue-700" : "text-gray-600 group-hover:text-gray-800")">
                                map
                            </span>
                            <span class="sidebar-label ml-3">Strategy Map</span>
                        </a>
                    </li>
                    <li class="group">
                        <a href="@Url.Action("PCR", "PCR")"
                           class="flex items-center px-6 py-3 rounded-md transition-all duration-300
                            @(ViewData["ActivePage"] == "PCR" ? "bg-blue-100 text-blue-700" : "text-gray-700 hover:bg-gray-200")">
                            <span class="material-symbols-outlined @(ViewData["ActivePage"] == "PCR" ? "text-blue-700" : "text-gray-600 group-hover:text-gray-800")">
                                analytics
                            </span>
                            <span class="sidebar-label ml-3">PCR</span>
                        </a>
                    </li>
                    <li class="group">
                        <a href="@Url.Action("Settings", "Settings")"
                           class="flex items-center px-6 py-3 rounded-md transition-all duration-300
                            @(ViewData["ActivePage"] == "Settings" ? "bg-blue-100 text-blue-700" : "text-gray-700 hover:bg-gray-200")">
                            <span class="material-symbols-outlined @(ViewData["ActivePage"] == "Settings" ? "text-blue-700" : "text-gray-600 group-hover:text-gray-800")">
                                settings
                            </span>
                            <span class="sidebar-label ml-3">Settings</span>
                        </a>
                    </li>
                </ul>

            </div>

            <!-- User & Logout Section -->
            <div class="border-t border-gray-300">
                <ul class="mt-2 space-y-1">
                    <li class="group">
                        <a href="@Url.Action("Profile", "User")" class="flex items-center px-6 py-3 text-gray-700 hover:bg-gray-200 rounded-md transition-all duration-300">
                            <span class="material-symbols-outlined text-gray-600 group-hover:text-gray-800">person</span>
                            <span class="sidebar-label ml-3">User</span>
                        </a>
                    </li>
                    <li class="group">
                        <a href="@Url.Action("Logout", "Auth")" class="flex items-center px-6 py-3 text-red-600 hover:bg-red-100 hover:text-red-700 rounded-md transition-all duration-300">
                            <span class="material-symbols-outlined text-red-600 group-hover:text-red-700">logout</span>
                            <span class="sidebar-label ml-3">Logout</span>
                        </a>
                    </li>
                </ul>
            </div>
        </div>

        <!-- Main Content -->
        <div class="flex-1 p-6">
            <!-- Header -->
            <div class="bg-white px-6 py-3 rounded-md shadow-md border relative">
                <div class="flex justify-end align-items-end">
                    <span id="currentDateTime" class="text-gray-600 text-sm"></span>
                </div>
                    @RenderBody()
            </div>
        </div>


    </div>

    <!-- Sidebar Collapse Script -->
    <script>
            
        const sidebar = document.getElementById("sidebar");
        const toggleSidebar = document.getElementById("toggleSidebar");
        const labels = document.querySelectorAll(".sidebar-label");
        const logoExpanded = document.getElementById("sidebarLogo");
        const logoCollapsed = document.querySelector(".collapsed-logo");

        toggleSidebar.addEventListener("click", () => {
            sidebar.classList.toggle("w-16");
            sidebar.classList.toggle("w-64");

            labels.forEach(label => {
                label.classList.toggle("hidden");
            });

            // Toggle logo visibility
            if (sidebar.classList.contains("w-16")) {
                logoExpanded.classList.add("hidden");
                logoCollapsed.classList.remove("hidden");
            } else {
                logoExpanded.classList.remove("hidden");
                logoCollapsed.classList.add("hidden");
            }
        });

        // Initialize correct logo state on load
        if (sidebar.classList.contains("w-16")) {
            logoExpanded.classList.add("hidden");
            logoCollapsed.classList.remove("hidden");
        }


        // Auto Update Date & Time
            function updateTime() {
            const now = new Date();

            const formattedDate = now.toLocaleDateString('en-GB', {
                weekday: 'long',
                day: '2-digit',
                month: 'long',
                year: 'numeric'
            });

            const formattedTime = now.toLocaleTimeString('en-US', {
                hour12: false, // 24-hour format
                hour: '2-digit',
                minute: '2-digit',
                second: '2-digit'
            });

            document.getElementById("currentDateTime").textContent = `${formattedDate} | ${formattedTime}`;
        }

        setInterval(updateTime, 1000);
        updateTime(); // Initial call
    </script>
</body>
</html>
