@* @model SPMIS_Web.Models.ViewModels.UpdateMapViewModel *@
@model SPMIS_Web.Models.Entities.StrategyMap

<form id="updateMapForm" method="post" asp-controller="Map" asp-action="UpdateMap">
    <input type="hidden" name="MapId" value="@Model.MapId" />

    <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
        <div>
            <label asp-for="MapStart" class="block text-gray-700 dark:text-gray-300 mb-2">Start Year</label>
            <select id="MapStart" name="MapStart"
                    class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg
                   bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 overflow-auto">
                @for (int year = DateTime.Now.Year - 5; year <= DateTime.Now.Year + 5; year++)
                {
                    <option value="@year-01-01" selected="@(year == DateTime.Now.Year ? "selected" : null)">@year</option>
                }
            </select>
            <span asp-validation-for="MapStart" class="text-red-500 text-sm"></span>
        </div>
        <div>
            <label asp-for="MapEnd" class="block text-gray-700 dark:text-gray-300 mb-2">End Year</label>
            <select id="MapEnd" name="MapEnd"
                    class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg
                   bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100
                   max-h-40 overflow-auto">
                @for (int year = DateTime.Now.Year + 1; year <= DateTime.Now.Year + 10; year++)
                {
                    <option value="@year-12-31" selected="@(year == DateTime.Now.Year + 5 ? "selected" : null)">@year</option>
                }
            </select>
            <span asp-validation-for="MapEnd" class="text-red-500 text-sm"></span>
        </div>
    </div>

    <div class="mb-4">
        <label for="MapTitle" class="block text-sm font-medium text-gray-700 mb-1">Title</label>
        <input type="text" id="MapTitle" name="MapTitle" value="@Model.MapTitle" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" required maxlength="100" />
        <span class="text-xs text-gray-500">Maximum 100 characters</span>
    </div>

    <div class="mb-4">
        <label for="MapDescription" class="block text-sm font-medium text-gray-700 mb-1">Description</label>
        <textarea id="MapDescription" name="MapDescription" rows="3" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">@Model.MapDescription</textarea>
    </div>

    <div class="mb-4">
        <label for="IsActive" class="block text-sm font-medium text-gray-700 mb-1">Active</label>

        @if (Model.IsActive)
        {
            <input type="checkbox" id="IsActive" name="IsActive" value="true" checked />
        }
        else
        {
            <input type="checkbox" id="IsActive" name="IsActive" value="true" />
        }
    </div>




    <div class="flex justify-end space-x-3 mt-6">
        <button type="button" id="cancelEditBtn" class="px-4 py-2 bg-gray-300 text-gray-700 rounded-md hover:bg-gray-400 transition duration-200" onclick="closeModal()">
            Cancel
        </button>
        <button type="submit" class="px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition duration-200">
            Save Changes
        </button>
    </div>
</form>

<script>
    $(document).ready(function () {
        $("#updateMapForm").submit(function (e) {
            e.preventDefault(); // Prevent default form submission

            var form = $(this);
            var url = form.attr("action");

            $.ajax({
                type: "POST",
                url: url,
                data: form.serialize(),
                success: function (response) {
                    if (response.success) {
                        closeModal(); // Close modal on success
                        location.reload(); // Reload the page
                    } else {
                        alert("Error updating map.");
                    }
                },
                error: function (xhr) {
                    alert("Error: " + xhr.responseText);
                }
            });
        });

        window.closeModal = function () {
            $("#updateMapModal").addClass("hidden").removeClass("flex");
        };
    });
</script>
<script>
        $("#updateMapForm").submit(function (e) {
        e.preventDefault(); // Prevent default form submission

        $.ajax({
            url: $(this).attr("action"),
            type: "POST",
            data: $(this).serialize(),
            success: function (response) {
                if (response.success) {
                    alert("Map updated successfully!");
                    location.reload(); // Reload or update UI accordingly
                }
            },
            error: function (xhr) {
                if (xhr.responseJSON && xhr.responseJSON.error) {
                    alert(xhr.responseJSON.error); // Show validation error
                } else {
                    alert("An error occurred. Please try again.");
                }
            }
        });
    });

</script>