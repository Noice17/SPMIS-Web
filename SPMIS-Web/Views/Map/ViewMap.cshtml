@model SPMIS_Web.Models.Entities.StrategyMap

@{
    ViewData["Title"] = "View Strategy Map";
}

<link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

<style>
    /* Updated Color Scheme - "Ocean Breeze" */
    :root {
        --color-primary: #1E3A8A; /* Deep Blue (Header, Active Elements) */
        --color-secondary: #A3D9C5; /* Soft Mint Green */
        --color-accent: #F5A623; /* Warm Yellow */
        --color-background: #F0F9FF; /* Lightest Blue (Body Background) */
        --color-surface: #FFFFFF; /* White (Cards, Surfaces) */
        --color-border: #E5E7EB; /* Gray-200 (Subtle Borders) */
        --color-text-primary: #111827; /* Gray-900 (Primary Text) */
        --color-text-secondary: #6B7280; /* Gray-500 (Secondary Text) */
        --color-success: #16A34A; /* Green (Success Status) */
        --color-warning: #F59E0B; /* Orange (Warning Status) */
        --color-danger: #DC2626; /* Red (Danger Status) */
        --color-info: #0EA5E9; /* Cyan (Info Status) */
    }

    body {
        background-color: var(--color-background);
        color: var(--color-text-primary);
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; /* Modern Font */
        line-height: 1.6;
    }

    .btn-primary {
        background-color: var(--color-primary);
        color: white;
        padding: 0.75rem 1.5rem;
        border-radius: 0.5rem;
        font-weight: 500;
        transition: background-color 0.2s ease-in-out;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    }

        .btn-primary:hover {
            background-color: var(--color-accent);
            color: var(--color-text-primary);
        }

    .btn-secondary {
        background-color: var(--color-secondary);
        color: white;
        padding: 0.75rem 1.5rem;
        border-radius: 0.5rem;
        font-weight: 500;
        transition: background-color 0.2s ease-in-out;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    }

        .btn-secondary:hover {
            background-color: var(--color-accent);
            color: var(--color-text-primary);
        }

    .card {
        background-color: var(--color-surface);
        border: 1px solid var(--color-border);
        border-radius: 0.75rem;
        transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
    }

        .card:hover {
            transform: translateY(-4px);
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.08);
        }

    .text-primary {
        color: var(--color-text-primary);
    }

    .text-secondary {
        color: var(--color-text-secondary);
    }

    .badge {
        color: white;
        padding: 0.25rem 0.5rem;
        border-radius: 0.375rem;
        font-size: 0.875rem;
        font-weight: 500;
    }

        .badge.active {
            background-color: var(--color-success);
        }

        .badge.on-hold {
            background-color: var(--color-warning);
        }

        .badge.completed {
            background-color: #9CA3AF; /* Gray-400 */
        }

    .active-page {
        background-color: var(--color-primary);
        color: white;
    }

    .page-button {
        border: 1px solid var(--color-border);
        border-radius: 0.375rem;
        transition: background-color 0.2s ease-in-out, color 0.2s ease-in-out;
        color: var(--color-text-secondary);
        font-weight: 500;
    }

        .page-button:hover:not(.active-page) {
            background-color: var(--color-border);
            color: var(--color-text-primary);
        }

    .action-link {
        color: var(--color-text-secondary);
        transition: color 0.2s ease-in-out;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
    }

        .action-link:hover {
            color: var(--color-accent);
        }

    /* Form Styles */
    select.form-select,
    input.form-input {
        width: 100%;
        padding: 0.75rem;
        border: 1px solid var(--color-border);
        border-radius: 0.5rem;
        background-color: var(--color-surface);
        color: var(--color-text-primary);
        font-size: 1rem;
        transition: border-color 0.2s ease-in-out;
    }

        select.form-select:focus,
        input.form-input:focus {
            border-color: var(--color-secondary);
            outline: none;
            box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.2); /* Light Blue Ring */
        }

    label.form-label {
        display: block;
        margin-bottom: 0.5rem;
        color: var(--color-text-primary);
        font-weight: 500;
    }

    /* Accessibility */
    .sr-only {
        position: absolute;
        width: 1px;
        height: 1px;
        padding: 0;
        margin: -1px;
        overflow: hidden;
        clip: rect(0, 0, 0, 0);
        white-space: nowrap;
        border: 0;
    }

    /* Header Styles */
    .header {
        background-color: var(--color-primary);
        color: white;
        padding: 2rem 1rem;
        border-radius: 0.75rem;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        position: relative;
        overflow: hidden;
    }

        .header::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(135deg, rgba(255, 255, 255, 0.1) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.1) 50%, rgba(255, 255, 255, 0.1) 75%, transparent 75%, transparent);
            background-size: 50px 50px;
            opacity: 0.2;
            z-index: 0;
        }

    .header-content {
        position: relative;
        z-index: 1;
    }

    .header-title {
        font-size: 2.5rem;
        font-weight: 700;
        margin-bottom: 0.5rem;
    }

    .header-subtitle {
        font-size: 1.25rem;
        font-weight: 400;
    }
</style>

<div class="min-h-screen p-6 flex flex-col">
    <!-- Header -->
    <header class="header w-full mb-8 text-center">
        <div class="header-content">
            <h1 class="header-title">@Model.MapTitle</h1>
            <p class="header-subtitle">Strategic Period: @Model.MapStart.Year - @Model.MapEnd.Year</p>
        </div>
    </header>

    <!-- Action Buttons Container -->
    <div class="flex justify-between items-center space-x-3 mb-8 max-w-6xl mx-auto w-full">
        <div>
            <a asp-controller="Map" asp-action="StrategicMap" class="btn-secondary flex items-center px-4 py-2 rounded-md font-medium shadow-sm">
                <i class="fas fa-arrow-left mr-2"></i>Back to Maps
            </a>
        </div>
        <div>
            <a asp-controller="Objective" asp-action="AddObjective" class="btn-primary flex items-center px-4 py-2 rounded-md font-medium shadow-sm">
                <i class="fas fa-plus mr-2"></i>Add Objective
            </a>
        </div>
    </div>

    <!-- Strategy Objectives Section -->
    <section class="max-w-6xl mx-auto w-full mb-8">
        <div class="flex justify-between items-center mb-6">
            <h2 class="text-2xl font-medium text-primary">Strategy Objectives</h2>
            <div class="flex space-x-2">
                <div class="relative">
                    <select id="filterStatus" class="form-select">
                        <option value="">Filter by Status</option>
                        <option value="active">Active</option>
                        <option value="completed">Completed</option>
                        <option value="on-hold">On Hold</option>
                    </select>
                    <div class="pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700">
                        <svg class="fill-current h-4 w-4" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path d="M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z" /></svg>
                    </div>
                </div>
                <div class="relative">
                    <select id="sortBy" class="form-select">
                        <option value="">Sort by</option>
                        <option value="date">Date Added</option>
                        <option value="priority">Priority</option>
                    </select>
                    <div class="pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700">
                        <svg class="fill-current h-4 w-4" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path d="M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z" /></svg>
                    </div>
                </div>
            </div>
        </div>

        <!-- Objectives Grid -->
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            @for (int i = 1; i <= 6; i++)
            {
                <article class="card rounded-lg overflow-hidden">
                    <div class="p-5">
                        <div class="flex justify-between items-start mb-3">
                            <h3 class="text-xl font-semibold text-primary">Objective @i</h3>
                            @{
                                string statusClass = "";
                                string statusText = "Active";

                                if (i % 3 == 0)
                                {
                                    statusClass = "completed";
                                    statusText = "Completed";
                                }
                                else if (i % 2 == 0)
                                {
                                    statusClass = "on-hold";
                                    statusText = "On Hold";
                                }
                                else
                                {
                                    statusClass = "active";
                                    statusText = "Active";
                                }
                            }
                            <span class="badge inline-block text-xs px-2 py-1 rounded @statusClass">@statusText</span>
                        </div>
                        <p class="text-secondary text-sm mb-4">Core Strategy @i</p>

                        <div class="space-y-3 mb-4">
                            <div class="flex items-start">
                                <span class="text-secondary min-w-20"><i class="fas fa-users mr-2"></i>Offices:</span>
                                <span class="text-primary">Office A, Office B</span>
                            </div>
                            <div class="flex items-start">
                                <span class="text-secondary min-w-20"><i class="fas fa-bullseye mr-2"></i>Result:</span>
                                <span class="text-primary">Achieve 50% market share</span>
                            </div>
                            <div class="flex items-start">
                                <span class="text-secondary min-w-20"><i class="fas fa-calendar mr-2"></i>Timeline:</span>
                                <span class="text-primary">Q1 2025</span>
                            </div>
                        </div>

                        <footer class="pt-3 border-t border-border flex justify-between">
                            <button class="action-link" aria-label="Edit Objective">
                                <i class="fas fa-edit" aria-hidden="true"></i>Edit
                            </button>
                            <button class="action-link" aria-label="Assign Objective">
                                <i class="fas fa-user-plus" aria-hidden="true"></i>Assign
                            </button>
                            <button class="action-link" aria-label="View Objective Details">
                                <i class="fas fa-eye" aria-hidden="true"></i>View
                            </button>
                        </footer>
                    </div>
                </article>
            }
        </div>
    </section>

    <!-- Pagination -->
    <footer class="flex justify-between items-center max-w-6xl mx-auto w-full mt-6">
        <span class="text-sm text-secondary">Showing 1-6 of 18 objectives</span>
        <div class="flex space-x-1">
            <button class="page-button w-8 h-8 flex items-center justify-center rounded" aria-label="Previous page" disabled>
                <i class="fas fa-chevron-left text-xs" aria-hidden="true"></i>
            </button>
            <button class="page-button active-page w-8 h-8 flex items-center justify-center rounded" aria-label="Current page, Page 1">1</button>
            <button class="page-button w-8 h-8 flex items-center justify-center rounded" aria-label="Go to page 2">2</button>
            <button class="page-button w-8 h-8 flex items-center justify-center rounded" aria-label="Go to page 3">3</button>
            <button class="page-button w-8 h-8 flex items-center justify-center rounded" aria-label="Next page">
                <i class="fas fa-chevron-right text-xs" aria-hidden="true"></i>
            </button>
        </div>
    </footer>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Event listeners for action links (using event delegation)
        document.querySelector('.grid').addEventListener('click', function (event) {
            if (event.target.classList.contains('action-link') || event.target.parentNode.classList.contains('action-link')) {
                const button = event.target.closest('.action-link');
                if (!button) return; // Exit if the closest button is null

                const ariaLabel = button.getAttribute('aria-label');
                if (ariaLabel === 'Edit Objective') {
                    alert('Edit Objective clicked!');
                } else if (ariaLabel === 'Assign Objective') {
                    alert('Assign Objective clicked!');
                } else if (ariaLabel === 'View Objective Details') {
                    alert('View Objective details clicked!');
                }
            }
        });

        // Filter and sort functionality (basic example)
        document.getElementById('filterStatus').addEventListener('change', function () {
            const selectedStatus = this.value;
            alert('Filtering by status: ' + selectedStatus);
            // Implement your filtering logic here
        });

        document.getElementById('sortBy').addEventListener('change', function () {
            const selectedSort = this.value;
            alert('Sorting by: ' + selectedSort);
            // Implement your sorting logic here
        });
    });
</script>
