@model SPMIS_Web.Models.ViewModels.AddObjectiveTypeViewModel

@{
    ViewData["Title"] = "View Strategy Map";
}

<link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
<!-- Add this in your HTML file inside <head> or before </body> -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>


<div class="px-6 py-3 rounded-md shadow-md border relative bg-blue-50">
    <header class="w-full mb-8 text-center bg-blue-900 text-white p-8 rounded-xl shadow-md relative overflow-hidden">
        <div class="relative z-10">
            <h1 class="text-4xl font-bold mb-2">@Model.MapTitle</h1>
            <p class="text-xl">Strategic Period: @Model.MapStart.Year - @Model.MapEnd.Year</p>
        </div>
        <div class="absolute inset-0 bg-gradient-to-r from-blue-800 to-blue-900 opacity-50"></div>
    </header>

    <div class="flex justify-between items-center space-x-3 mb-8 max-w-6xl mx-auto w-full">
        <a asp-controller="Map" asp-action="StrategicMap" class="bg-red-600 hover:bg-yellow-500 text-white flex items-center px-4 py-2 rounded-md font-medium shadow-sm transition duration-200">
            <i class="fas fa-arrow-left mr-2"></i>Back to Maps
        </a>

        <button id="openUpdateMapModalBtn" class="bg-green-500 hover:bg-yellow-500 text-white flex items-center px-4 py-2 rounded-md font-medium shadow-sm transition duration-200">
            Update Map
        </button>

        <!-- Add Objective Button -->
        <button id="openModalBtn" class="bg-blue-900 hover:bg-yellow-500 text-white flex items-center px-4 py-2 rounded-md font-medium shadow-sm transition duration-200">
            <i class="fas fa-plus mr-2"></i>Add Objective
        </button>

        
    </div>

    <section class="max-w-6xl mx-auto w-full mb-8">
        <h2 class="text-2xl font-medium text-gray-900 mb-6">Strategy Objectives</h2>

        @if (Model.Objective != null && Model.Objective.Any())
        {
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                @foreach (var objective in Model.Objective)
                {
                    <article class="bg-white border border-gray-200 rounded-lg overflow-hidden shadow-sm hover:shadow-md transition duration-200 p-5">
                        <h3 class="text-xl font-semibold text-gray-900">@objective.ObjectiveDescription</h3>

                        <!-- Display the Objective Type -->
                        <p class="text-gray-600">@(objective.Type != null ? objective.Type.ObjectiveTypeName : "N/A") Strategy</p>

                        <div class="space-y-3 mb-4">
                        </div>

                        <footer class="pt-3 border-t border-gray-200 flex justify-between">
                            <button class="openUpdateObjectiveBtn text-gray-500 hover:text-yellow-500 transition duration-200 flex items-center gap-2"
                                    data-objectiveid="@objective.ObjectiveId">
                                <i class="fas fa-edit"></i>Edit
                            </button>

                            <button class="text-gray-500 hover:text-yellow-500 transition duration-200 flex items-center gap-2">
                                <i class="fas fa-user-plus"></i>Assign
                            </button>
                            <button class="text-gray-500 hover:text-yellow-500 transition duration-200 flex items-center gap-2">
                                <i class="fas fa-eye"></i>View
                            </button>
                        </footer>
                    </article>
                }

            </div>
        }
        else
        {
            <p class="text-center text-gray-500 text-lg">No objectives available.</p>
        }
    </section>
</div>

<!-- Update Map Modal-->
<div id="updateMapModal" class="fixed inset-0 bg-gray-900 bg-opacity-50 hidden justify-center items-center">
    <div class="bg-white p-6 rounded-lg shadow-md border w-96 relative">
        <button class="absolute top-2 right-2 text-gray-500 hover:text-red-500" onclick="closeModal()">&times;</button>

        <h1 class="text-center text-2xl font-semibold mb-4 bg-gray-100 py-2 rounded-lg">Update @Model.MapTitle</h1>

        <div id="updateMapContainer"></div>
    </div>
</div>

<!-- Add Objective Modal -->
<div id="addObjectiveModal" class="fixed inset-0 bg-gray-900 bg-opacity-50 hidden justify-center items-center">
    <div class="bg-white p-6 rounded-lg shadow-md border w-96 relative">
        <button class="absolute top-2 right-2 text-gray-500 hover:text-red-500" onclick="closeModal()">&times;</button>

        <h1 class="text-center text-2xl font-semibold mb-4 bg-gray-100 py-2 rounded-lg">Add Objective</h1>

        <div id="addObjectiveContainer"></div>
    </div>
</div>

<!-- Update Objective Modal-->
<div id="updateObjectiveModal" class="fixed inset-0 bg-gray-900 bg-opacity-50 hidden justify-center items-center">
    <div class="bg-white p-6 rounded-lg shadow-md border w-96 relative">
        <button class="absolute top-2 right-2 text-gray-500 hover:text-red-500" onclick="closeModal()">&times;</button>

        <h1 class="text-center text-2xl font-semibold mb-4 bg-gray-100 py-2 rounded-lg">Update Objective</h1>

        <div id="updateObjectiveContainer"></div>
    </div>
</div>




<!-- JavaScript to Open & Close Modal -->
<!-- EDITED: BEFORE: /Map/AddObjectivePartial -->
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const modal = document.getElementById("addObjectiveModal");
        const openBtn = document.getElementById("openModalBtn");

        openBtn.addEventListener("click", function () {
            console.log("Opening Modal");
            modal.classList.remove("hidden");
            modal.classList.add("flex");

            // Load the AddObjectivePartial dynamically with correct mapId
            
            $("#addObjectiveContainer").load(`/Objective/AddObjective?mapId=@Model.MapId`);
        });

        window.closeModal = function () {
            console.log("Closing Modal");
            modal.classList.add("hidden");
            modal.classList.remove("flex");
        };
    });
</script>
<!--Update Map-->
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const modal = document.getElementById("updateMapModal");
        const openBtn = document.getElementById("openUpdateMapModalBtn");

        openBtn.addEventListener("click", function () {
            console.log("Opening Modal");
            modal.classList.remove("hidden");
            modal.classList.add("flex");


            $("#updateMapContainer").load(`/Map/UpdateMap?mapId=@Model.MapId`);
        });

        window.closeModal = function () {
            console.log("Closing Modal");
            modal.classList.add("hidden");
            modal.classList.remove("flex");
        };
    });
</script>

<!--Update Objective-->
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const modal = document.getElementById("updateObjectiveModal");
        const updateContainer = document.getElementById("updateObjectiveContainer");

        // Event delegation for dynamically loaded elements
        document.addEventListener("click", function (event) {
            if (event.target.closest(".openUpdateObjectiveBtn")) {
                let objectiveId = event.target.closest(".openUpdateObjectiveBtn").getAttribute("data-objectiveid");
                console.log("Opening Modal for Objective ID:", objectiveId);

                modal.classList.remove("hidden");
                modal.classList.add("flex");

                // Load the UpdateObjectivePartial dynamically with the correct objectiveId
                $("#updateObjectiveContainer").load(`/Objective/UpdateObjective?objectiveId=${objectiveId}`);
            }
        });

        window.closeModal = function () {
            console.log("Closing Modal");
            modal.classList.add("hidden");
            modal.classList.remove("flex");
        };
    });
</script>
