@model List<SPMIS_Web.Models.Entities.ObjectiveType>


<div class="flex justify-between items-center mb-4">
    <h1 class="text-xl font-semibold">Objective Types</h1>
    <a class="px-4 py-2 border border-gray-700 text-gray-700 rounded hover:bg-gray-700 hover:text-white transition"
       asp-controller="Objective" asp-action="AddObjectiveType">
        Add Objective Type
    </a>
</div>

<table class="w-full border-collapse border border-gray-300">
    <thead>
        <tr class="bg-gray-200">
            <th class="border border-gray-300 px-4 py-2">#</th>
            <th class="border border-gray-300 px-4 py-2">Objective Type</th>
            <th class="border border-gray-300 px-4 py-2">Actions</th>
        </tr>
    </thead>
    <tbody>
        @if (Model != null && Model.Any())
        {
            int count = 1;
            @foreach (var objectiveType in Model)
            {
                <tr class="border border-gray-300">
                    <td class="border border-gray-300 px-4 py-2">@count</td>
                    <td class="border border-gray-300 px-4 py-2">
                        <span class="view-mode" id="nameDisplay_@objectiveType.ObjectiveTypeId">@objectiveType.ObjectiveTypeName</span>
                        <input type="text" class="edit-mode hidden border p-1" id="nameInput_@objectiveType.ObjectiveTypeId" value="@objectiveType.ObjectiveTypeName" />
                    </td>
                    <td class="border border-gray-300 px-4 py-2 space-x-2">
                        <button class="px-2 py-1 bg-blue-500 text-white text-sm rounded hover:bg-blue-600 transition"
                                id="editBtn_@objectiveType.ObjectiveTypeId" onclick="editObjective('@objectiveType.ObjectiveTypeId')">
                            Edit
                        </button>
                        <button class="px-2 py-1 bg-green-500 text-white text-sm rounded hover:bg-green-600 transition hidden"
                                id="saveBtn_@objectiveType.ObjectiveTypeId" onclick="saveObjective('@objectiveType.ObjectiveTypeId')">
                            Save
                        </button>
                        <button class="px-2 py-1 bg-gray-500 text-white text-sm rounded hover:bg-gray-600 transition hidden"
                                id="cancelBtn_@objectiveType.ObjectiveTypeId" onclick="cancelEdit('@objectiveType.ObjectiveTypeId')">
                            Cancel
                        </button>
                    </td>
                </tr>
                count++;
            }
        }
        else
        {
            <tr>
                <td colspan="3" class="text-center p-4">No objective types found.</td>
            </tr>
        }
    </tbody>
</table>

<script>
    function editObjective(id) {
        id = encodeURIComponent(id);
        document.getElementById("nameDisplay_" + id).classList.add("hidden");
        document.getElementById("nameInput_" + id).classList.remove("hidden");
        document.getElementById("editBtn_" + id).classList.add("hidden");
        document.getElementById("saveBtn_" + id).classList.remove("hidden");
        document.getElementById("cancelBtn_" + id).classList.remove("hidden");
    }

    function cancelEdit(id) {
        id = encodeURIComponent(id);
        document.getElementById("nameDisplay_" + id).classList.remove("hidden");
        document.getElementById("nameInput_" + id).classList.add("hidden");
        document.getElementById("editBtn_" + id).classList.remove("hidden");
        document.getElementById("saveBtn_" + id).classList.add("hidden");
        document.getElementById("cancelBtn_" + id).classList.add("hidden");
    }

    function saveObjective(id) {
        id = encodeURIComponent(id);
        let newName = document.getElementById("nameInput_" + id).value.trim();

        fetch('/Objective/EditObjectiveType', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'RequestVerificationToken': document.querySelector("input[name='__RequestVerificationToken']")?.value || ''
            },
            body: JSON.stringify({ ObjectiveTypeId: id, ObjectiveTypeName: newName })
        })
        .then(response => {
            if (!response.ok) {
                throw new Error("Error updating Objective Type.");
            }
            return response.json();
        })
        .then(data => {
            document.getElementById("nameDisplay_" + id).textContent = newName;
            cancelEdit(id);
        })
        .catch(error => {
            alert(error.message);
        });
    }
</script>
