@model SPMIS_Web.Models.ViewModels.AddObjectiveViewModel

<link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">

<div class="flex justify-center items-center min-h-screen bg-gray-100">
    <div class="bg-white p-6 rounded-lg shadow-md border w-96">
        <!-- Header -->
        <h1 class="text-center text-2xl font-semibold mb-4 bg-gray-100 py-2 rounded-lg">Add Objectives</h1>

        <!-- Form -->
        <form method="post" asp-action="AddObjective">
            <input type="hidden" name="mapId" value="@Model.MapId" />

            <div class="mb-4">
                <label for="objectiveDescription" class="block font-semibold">Objective Description</label>
                <input type="text" id="objectiveDescription" name="ObjectiveDescription" class="mt-1 p-2 w-full bg-gray-100 border-none rounded-full focus:ring focus:ring-blue-300" required>
            </div>
<form id="addObjectiveForm" method="post" asp-action="AddObjective">
    <div class="mb-4">
        <label for="objectiveDescription" class="block font-semibold">Objective Description</label>
        <input type="text" id="objectiveDescription" name="ObjectiveDescription" class="mt-1 p-2 w-full bg-gray-100 border-none rounded-lg focus:ring focus:ring-blue-300" required>
    </div>

    <div class="mb-4">
        <label for="objectType" class="block font-semibold">Object Type</label>
        <select id="objectType" name="ObjectTypeId" class="mt-1 p-2 w-full bg-gray-100 border-none rounded-lg focus:ring focus:ring-blue-300" required>
            <option value="" disabled selected>Select an Object Type</option>
            @foreach (var type in Model.ObjectiveType)
            {
                <option value="@type.ObjectiveTypeId">@type.ObjectiveTypeName</option>
            }
        </select>
    </div>

    <div class="flex justify-center">
        <button type="submit" class="px-6 py-2 bg-teal-400 text-white font-semibold rounded-lg shadow-md hover:bg-teal-500">Submit</button>
    </div>
</form>

<script>
    document.getElementById("addObjectiveForm").addEventListener("submit", async function (event) {
        event.preventDefault();
        const form = event.target;
        const formData = new FormData(form);

        const response = await fetch(form.action, {
            method: "POST",
            body: formData
        });

        if (response.ok) {
            alert("Objective added successfully!");
            document.getElementById("addObjectiveModal").classList.add("hidden"); // Close modal
            location.reload(); // Refresh page or update UI dynamically
        } else {
            alert("Error adding objective.");
        }
    });
</script>
